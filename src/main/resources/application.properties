#POSTGRESQL CONFIGURATIONS
spring.datasource.url=jdbc:postgresql://localhost:5432/ticketing
spring.datasource.username=master
spring.datasource.password=pass

#SERVER CONFIGURATION
server.port=8081

#KEYCLOACK CONFIGURATIONS
keycloak.realm.name = anmil-realm

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/${keycloak.realm.name}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

spring.security.oauth2.client.registration.anmil-grant-access.client-id=anmil-grant-access
spring.security.oauth2.client.registration.anmil-grant-access.client-secret=prova-secret
spring.security.oauth2.client.registration.anmil-grant-access.scope=openid
spring.security.oauth2.client.registration.anmil-grant-access.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.anmil-grant-access.redirect-uri=http://localhost:8080/login/oauth2/code/anmil-grant-access

keycloack.auth-code=http://localhost:8080/realms/${keycloak.realm.name}/protocol/openid-connect/auth?response_type=code&client_id=${spring.security.oauth2.client.registration.keycloak.client-id}&scope=openid


spring.security.oauth2.client.provider.anmil-grant-access.issuer-uri=http://localhost:8080/realms/${keycloak.realm.name}
spring.security.oauth2.client.provider.anmil-grant-access.authorization-uri=http://localhost:8080/realms/${keycloak.realm.name}/protocol/openid-connect/auth?response_type=code&client_id=${spring.security.oauth2.client.registration.keycloak.client-id}&scope=openid
spring.security.oauth2.client.provider.anmil-grant-access.token-uri=http://localhost:8080/realms/${keycloak.realm.name}/protocol/openid-connect/token
spring.security.oauth2.client.provider.anmil-grant-access.user-info-uri=http://localhost:8080/realms/${keycloak.realm.name}/protocol/openid-connect/userinfo